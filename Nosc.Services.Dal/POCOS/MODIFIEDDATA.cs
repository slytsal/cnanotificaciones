//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Nosc.Services.Dal.POCOS
{
    public partial class MODIFIEDDATA
    {
        #region Primitive Properties
    
        public virtual long IdModifiedData
        {
            get;
            set;
        }
    
        public virtual Nullable<long> IdSyncTable
        {
            get { return _idSyncTable; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_idSyncTable != value)
                    {
                        if (SYNCTABLE != null && SYNCTABLE.IdSyncTable != value)
                        {
                            SYNCTABLE = null;
                        }
                        _idSyncTable = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _idSyncTable;
    
        public virtual Nullable<bool> IsModified
        {
            get;
            set;
        }
    
        public virtual Nullable<long> ServerModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual SYNCTABLE SYNCTABLE
        {
            get { return _sYNCTABLE; }
            set
            {
                if (!ReferenceEquals(_sYNCTABLE, value))
                {
                    var previousValue = _sYNCTABLE;
                    _sYNCTABLE = value;
                    FixupSYNCTABLE(previousValue);
                }
            }
        }
        private SYNCTABLE _sYNCTABLE;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupSYNCTABLE(SYNCTABLE previousValue)
        {
            if (previousValue != null && previousValue.MODIFIEDDATA.Contains(this))
            {
                previousValue.MODIFIEDDATA.Remove(this);
            }
    
            if (SYNCTABLE != null)
            {
                if (!SYNCTABLE.MODIFIEDDATA.Contains(this))
                {
                    SYNCTABLE.MODIFIEDDATA.Add(this);
                }
                if (IdSyncTable != SYNCTABLE.IdSyncTable)
                {
                    IdSyncTable = SYNCTABLE.IdSyncTable;
                }
            }
            else if (!_settingFK)
            {
                IdSyncTable = null;
            }
        }

        #endregion
    }
}
